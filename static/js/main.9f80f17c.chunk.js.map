{"version":3,"sources":["auth/AuthProvider.tsx","auth/useAuth.tsx","helpers/routers.ts","components/Navigation.tsx","components/layouts/Layout.tsx","pages/AboutPage/AboutPage.tsx","pages/AccountPage/AccountPage.tsx","pages/admin/UploadsPage/UploadsPage.tsx","pages/admin/UsersPage/UsersPage.tsx","pages/IndexPage/IndexPage.tsx","pages/NotFoundPage/NotFoundPage.tsx","pages/SingInPage/SingInPage.tsx","pages/SingUpPage/SingUpPage.tsx","routers/PrivateRoute.tsx","routers/PublicRoute.tsx","routers/AppRouter.tsx","App.tsx","index.tsx"],"names":["AuthContext","createContext","AuthProvider","props","useState","user","setUser","contextValue","login","credentials","logged","logout","Provider","value","children","useAuth","useContext","routers","indexPage","aboutPage","accountPage","singInPage","singUpPage","userPage","uploadPage","notFoundPage","Navigation","tools","Navbar","bg","expand","variant","Container","fluid","Brand","as","NavLink","to","Toggle","Collapse","id","Nav","style","marginRight","Link","NavDropdown","title","Item","className","onClick","Layout","AboutPage","AccountPage","email","UploadsPage","UsersPage","IndexPage","NotFoundPage","SingInPage","userCredentials","setUserCredential","handlerSetCredential","e","target","name","Row","Col","xs","Form","Card","maxWidth","margin","backgroundColor","Body","FormGroup","htmlFor","FormControl","type","autoFocus","placeholder","borderRadius","borderColor","onChange","Button","SingUpPage","PrivateRoute","PublicRoute","AppRouter","exact","path","component","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9f80f17c.chunk.js","sourcesContent":["import { createContext, useState } from 'react'\r\n\r\n// interface contextValue\r\ninterface ContextValueI {\r\n    login: any;\r\n    logged: boolean;\r\n    logout: any;\r\n    user: any\r\n}\r\n\r\nexport const AuthContext = createContext<ContextValueI | null>(null);\r\n\r\nexport default function AuthProvider(props: any) {\r\n    const [user, setUser] = useState<object|null>(null);\r\n\r\n    // login function\r\n    const login = (credentials: object): void => {\r\n        setUser(credentials);\r\n    }\r\n\r\n    const logged: boolean = !!user;\r\n\r\n    const logout = (): void => {setUser(null)};\r\n\r\n    const contextValue:ContextValueI = {\r\n        login,\r\n        logged,\r\n        logout,\r\n        user\r\n    };\r\n\r\n    return (\r\n        <AuthContext.Provider value={contextValue}>\r\n            {props.children}\r\n        </AuthContext.Provider>\r\n    )\r\n}\r\n","import { useContext } from 'react';\r\nimport {AuthContext} from './AuthProvider';\r\n\r\nexport default function useAuth() {\r\n    return useContext(AuthContext);\r\n}\r\n","const routers = {\r\n    indexPage: '/overx/',\r\n    aboutPage: '/overx/about',\r\n    accountPage: '/overx/account',\r\n    singInPage: '/overx/singin',\r\n    singUpPage: '/overx/singup',\r\n    userPage: '/overx/admin/user',\r\n    uploadPage: '/overx/admin/upload',\r\n    notFoundPage: '*',\r\n}\r\n\r\nexport default routers;","import { Navbar, Nav, Container, NavDropdown } from 'react-bootstrap'\r\nimport { NavLink } from 'react-router-dom'\r\nimport useAuth from '../auth/useAuth';\r\nimport routers from '../helpers/routers'\r\n\r\nexport default function Navigation() {\r\n    const tools: any = useAuth();\r\n\r\n    return (\r\n        <Navbar bg=\"dark\" expand=\"lg\" variant=\"dark\">\r\n            <Container fluid>\r\n                <Navbar.Brand as={NavLink} to={routers.indexPage}>OverX</Navbar.Brand>\r\n                <Navbar.Toggle aria-controls='responsive-navbar-nav' />\r\n                <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n                    <Nav style={{ marginRight: \"auto\" }}>\r\n                        <Nav.Link as={NavLink} to={routers.aboutPage}>About</Nav.Link>\r\n                        {tools.logged ? <NavDropdown title=\"admin\" id=\"collasible-nav-dropdown\">\r\n                            <NavDropdown.Item as={NavLink} to={routers.userPage}>users</NavDropdown.Item>\r\n                            <NavDropdown.Item as={NavLink} to={routers.uploadPage}>uploads</NavDropdown.Item>\r\n                        </NavDropdown> : ''}\r\n                    </Nav>\r\n                    <Nav>\r\n                        {tools.logged ? <>\r\n                            <Nav.Link as={NavLink} to={routers.accountPage}>account</Nav.Link>\r\n                            <Nav.Link className=\"text-danger\" onClick={() => tools.logout()}>Log out</Nav.Link>\r\n                        </> \r\n                            :\r\n                        <>\r\n                            <Nav.Link as={NavLink} to={routers.singInPage}>SingIn</Nav.Link>\r\n                            <Nav.Link as={NavLink} to={routers.singUpPage}>SingUp</Nav.Link>\r\n                        </>}\r\n                    </Nav>\r\n                </Navbar.Collapse>\r\n            </Container>\r\n        </Navbar>\r\n    )\r\n}\r\n","import Navigation from \"../Navigation\";\r\n\r\nexport default function Layout(props: any) {\r\n    return (\r\n        <>\r\n            <Navigation/>\r\n            {props.children}\r\n        </>\r\n    )\r\n}\r\n","export default function AboutPage() {\r\n    return (\r\n        <div>\r\n            <h1>About page</h1>\r\n        </div>\r\n    )\r\n}\r\n","import useAuth from \"../../auth/useAuth\"\r\n\r\nexport default function AccountPage() {\r\n    const tools = useAuth();\r\n    \r\n    return (\r\n\r\n        <div>\r\n            <h1>Account Page</h1>\r\n            <p>User Name: {tools?.user.email}</p>\r\n        </div>\r\n    )\r\n}\r\n","export default function UploadsPage() {\r\n    return (\r\n        <div>\r\n            <h1>UploadsPage</h1>\r\n        </div>\r\n    )\r\n}\r\n","export default function UsersPage() {\r\n    return (\r\n        <div>\r\n            <h1>UsersPage</h1>\r\n        </div>\r\n    )\r\n}\r\n","export default function IndexPage() {\r\n    return (\r\n        <div>\r\n            <h1>IndexPage</h1>\r\n        </div>\r\n    )\r\n}\r\n","export default function NotFoundPage() {\r\n    return (\r\n        <div>\r\n            <h1>Not found page</h1>\r\n        </div>\r\n    )\r\n}\r\n","import { useState } from \"react\";\r\nimport { Button, Card, Col, Container, Form, FormControl, FormGroup, Row } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport useAuth from \"../../auth/useAuth\";\r\nimport routers from \"../../helpers/routers\";\r\n\r\nexport default function SingInPage() {\r\n    const tools: any = useAuth();\r\n\r\n    // state of the user credentials\r\n    const [userCredentials, setUserCredential] = useState<object|null>(null);\r\n\r\n    // set user credential with the data of the form function\r\n    function handlerSetCredential(e: any): void {\r\n        setUserCredential({...userCredentials, [e.target.name]: e.target.value})\r\n    }\r\n\r\n    // login user on the system\r\n    function handlerLogin(): void {\r\n        tools.login(userCredentials);\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n            <Row >\r\n                <Col xs={12} className=\"text-center\">\r\n                    <Form className=\"mt-4\">\r\n                        <Card style={{ maxWidth: \"360px\", margin: \"auto\", backgroundColor: \"rgba(0,0,0,0.5)\" }}>\r\n                            <Card.Body>\r\n                                <h3 className=\"text-primary text-center\">Sing In</h3>\r\n                                <hr />\r\n                                <FormGroup className=\"mt-4\">\r\n                                    <label htmlFor=\"email\">Email</label>\r\n                                    <FormControl\r\n                                        id=\"email\"\r\n                                        name=\"email\"\r\n                                        type=\"email\"\r\n                                        autoFocus\r\n                                        placeholder=\"email@example.com\"\r\n                                        style={{ backgroundColor: \"rgba(0,0,0,0.3)\", borderRadius: 50, borderColor: \"transparent\" }}\r\n                                        className=\"mt-1 text-center text-white\"\r\n                                        onChange={handlerSetCredential}\r\n                                    />\r\n                                </FormGroup>\r\n                                <FormGroup className=\"mt-4\">\r\n                                    <label htmlFor=\"password\">Password</label>\r\n                                    <FormControl\r\n                                        name=\"password\"\r\n                                        type=\"password\"\r\n                                        placeholder=\"your password\"\r\n                                        style={{ backgroundColor: \"rgba(0,0,0,0.3)\", borderRadius: 50, borderColor: \"transparent\" }}\r\n                                        className=\"mt-1 text-center text-white\"\r\n                                        onChange={handlerSetCredential}\r\n                                    />\r\n                                </FormGroup>\r\n                            </Card.Body>\r\n                            <Button variant=\"primary\" onClick={() => handlerLogin()}>\r\n                                login \r\n                            </Button>\r\n                        </Card>\r\n                        <p className=\"mt-4\">if you haven't account: <Link to={routers.singUpPage}>Sing Up</Link></p>\r\n                    </Form>\r\n                </Col>\r\n            </Row>\r\n        </Container >\r\n    )\r\n}\r\n","import { Button, FormControl } from \"react-bootstrap\";\r\nimport { Container, Card, Col, Row, Form, FormGroup } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport routers from \"../../helpers/routers\";\r\n\r\nexport default function SingUpPage() {\r\n    return (\r\n        <Container className=\"mt-4\">\r\n            <Row>\r\n                <Col xs={12}>\r\n                    <Card style={{ maxWidth: \"360px\", margin: \"auto\", backgroundColor: \"rgba(0,0,0,0.5)\" }}>\r\n                        <Card.Body>\r\n                            <h3 className=\"text-center text-primary\">Sing Up</h3>\r\n                            <hr/>\r\n                            <Form>\r\n                                <FormGroup className=\"text-center\">\r\n                                    <label htmlFor=\"userName\">Name</label>\r\n                                    <FormControl\r\n                                        id=\"userName\"\r\n                                        name=\"userName\"\r\n                                        type=\"text\"\r\n                                        autoFocus\r\n                                        placeholder=\"pepito07\"\r\n                                        style={{ backgroundColor: \"rgba(0,0,0,0.3)\", borderRadius: 50, borderColor: \"transparent\" }}\r\n                                        className=\"mt-1 text-center text-white\"\r\n                                    />\r\n                                </FormGroup>\r\n                                <FormGroup className=\"text-center\">\r\n                                    <label htmlFor=\"userName\">Email</label>\r\n                                    <FormControl\r\n                                        id=\"email\"\r\n                                        name=\"email\"\r\n                                        type=\"email\"\r\n                                        placeholder=\"pepito07@gmail.com\"\r\n                                        style={{ backgroundColor: \"rgba(0,0,0,0.3)\", borderRadius: 50, borderColor: \"transparent\" }}\r\n                                        className=\"mt-1 text-center text-white\"\r\n                                    />\r\n                                </FormGroup>\r\n                                <FormGroup className=\"text-center\">\r\n                                    <label htmlFor=\"password\">Password</label>\r\n                                    <FormControl\r\n                                        id=\"password\"\r\n                                        name=\"password\"\r\n                                        type=\"password\"\r\n                                        placeholder=\"password hyper secure\"\r\n                                        style={{ backgroundColor: \"rgba(0,0,0,0.3)\", borderRadius: 50, borderColor: \"transparent\" }}\r\n                                        className=\"mt-1 text-center text-white\"\r\n                                    />\r\n                                </FormGroup>\r\n                                <FormGroup className=\"text-center\">\r\n                                    <label htmlFor=\"rePassword\">Repete Password</label>\r\n                                    <FormControl\r\n                                        id=\"rePassword\"\r\n                                        name=\"rePassword\"\r\n                                        type=\"password\"\r\n                                        placeholder=\"password hype secure\"\r\n                                        style={{ backgroundColor: \"rgba(0,0,0,0.3)\", borderRadius: 50, borderColor: \"transparent\" }}\r\n                                        className=\"mt-1 text-center text-white\"\r\n                                    />\r\n                                </FormGroup>\r\n                            </Form>\r\n                        </Card.Body>\r\n                        <Button variant=\"success\">create account</Button>\r\n                    </Card>\r\n                    <p className=\"mt-4 text-center\">if you haven account: <Link to={routers.singInPage}>Sing In</Link></p>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    )\r\n}\r\n","import {Redirect, Route} from 'react-router-dom'\r\nimport useAuth from '../auth/useAuth'\r\nimport routers from '../helpers/routers';\r\n\r\nexport default function PrivateRoute(props: any) {\r\n    const tools: any = useAuth();\r\n    if (tools.logged) {\r\n        return <Route {...props}/>\r\n    }\r\n    return <Redirect to={routers.singInPage}/>\r\n}\r\n","import {Redirect, Route} from 'react-router-dom'\r\nimport useAuth from '../auth/useAuth'\r\nimport routers from '../helpers/routers';\r\n\r\nexport default function PublicRoute(props: any) {\r\n    const tools: any = useAuth();\r\n    if (!tools.logged) {\r\n        return <Route {...props}/>\r\n    }\r\n    return <Redirect to={routers.indexPage}/>\r\n}\r\n","import { Route, Switch } from \"react-router-dom\";\r\nimport routers from \"../helpers/routers\";\r\nimport AboutPage from \"../pages/AboutPage\";\r\nimport AccountPage from \"../pages/AccountPage\";\r\nimport UploadsPage from \"../pages/admin/UploadsPage\";\r\nimport UsersPage from \"../pages/admin/UsersPage\";\r\nimport IndexPage from \"../pages/IndexPage\";\r\nimport NotFoundPage from \"../pages/NotFoundPage\";\r\nimport SingInPage from \"../pages/SingInPage\";\r\nimport SingUpPage from \"../pages/SingUpPage\";\r\nimport PrivateRoute from \"./PrivateRoute\";\r\nimport PublicRoute from \"./PublicRoute\";\r\n\r\nexport default function AppRouter() {\r\n    return (\r\n        <Switch>\r\n            <PrivateRoute exact path={routers.indexPage} component={IndexPage}/>\r\n            <Route exact path={routers.aboutPage} component={AboutPage}/>\r\n            \r\n            <PrivateRoute exact path={routers.accountPage} component={AccountPage}/>\r\n            <PublicRoute exact path={routers.singInPage} component={SingInPage}/>\r\n            <PublicRoute exact path={routers.singUpPage} component={SingUpPage}/>\r\n            \r\n            <PrivateRoute exact path={routers.userPage} component={UsersPage}/>\r\n            <PrivateRoute exact path={routers.uploadPage} component={UploadsPage}/>\r\n\r\n            <Route path={routers.notFoundPage} component={NotFoundPage}/>\r\n        </Switch>\r\n    )\r\n}\r\n","import React from 'react';\nimport { BrowserRouter as Router } from 'react-router-dom'\nimport AuthProvider from './auth/AuthProvider';\nimport Layout from './components/layouts/Layout';\nimport AppRouter from './routers/AppRouter';\n\nfunction App() {\n  return (\n    <AuthProvider>\n      <Router>\n        <Layout>\n          <AppRouter />\n        </Layout>\n      </Router>\n    </AuthProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}