{"version":3,"sources":["auth/AuthProvider.tsx","auth/useAuth.tsx","helpers/routers.ts","components/Navigation.tsx","components/layouts/Layout.tsx","pages/AboutPage/AboutPage.tsx","pages/AccountPage/AccountPage.tsx","pages/admin/UploadsPage/UploadsPage.tsx","pages/admin/UsersPage/UsersPage.tsx","pages/IndexPage/IndexPage.tsx","pages/NotFoundPage/NotFoundPage.tsx","pages/SingInPage/SingInPage.tsx","pages/SingUpPage/SingUpPage.tsx","routers/PrivateRoute.tsx","routers/PublicRoute.tsx","routers/AppRouter.tsx","App.tsx","index.tsx"],"names":["AuthContext","createContext","AuthProvider","props","useState","user","setUser","contextValue","login","credentials","logged","logout","Provider","value","children","useAuth","useContext","routers","indexPage","aboutPage","accountPage","singInPage","singUpPage","userPage","uploadPage","notFoundPage","Navigation","tools","Navbar","bg","expand","variant","Container","fluid","Brand","as","NavLink","to","Toggle","Collapse","id","Nav","style","marginRight","Link","NavDropdown","title","Item","className","onClick","Layout","AboutPage","AccountPage","UploadsPage","UsersPage","IndexPage","NotFoundPage","SingInPage","Button","SingUpPage","PrivateRoute","PublicRoute","AppRouter","exact","path","component","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b12d0415.chunk.js","sourcesContent":["import { createContext, useState } from 'react'\r\n\r\n// interface contextValue\r\ninterface ContextValueI {\r\n    login: any;\r\n    logged: boolean;\r\n    logout: any;\r\n}\r\n\r\nexport const AuthContext = createContext<ContextValueI | null>(null);\r\n\r\nexport default function AuthProvider(props: any) {\r\n    const [user, setUser] = useState(null);\r\n  \r\n    // login function\r\n    const login = (credentials: any): void => {\r\n        setUser(credentials);\r\n    }\r\n\r\n    const logged: boolean = !!user;\r\n\r\n    const logout = (): void => {setUser(null)};\r\n\r\n    const contextValue:ContextValueI = {\r\n        login,\r\n        logged,\r\n        logout\r\n    };\r\n\r\n    return (\r\n        <AuthContext.Provider value={contextValue}>\r\n            {props.children}\r\n        </AuthContext.Provider>\r\n    )\r\n}\r\n","import { useContext } from 'react';\r\nimport {AuthContext} from './AuthProvider';\r\n\r\nexport default function useAuth() {\r\n    return useContext(AuthContext);\r\n}\r\n","const routers = {\r\n    indexPage: '/overx/',\r\n    aboutPage: '/overx/about',\r\n    accountPage: '/overx/account',\r\n    singInPage: '/overx/singin',\r\n    singUpPage: '/overx/singup',\r\n    userPage: '/overx/admin/user',\r\n    uploadPage: '/overx/admin/upload',\r\n    notFoundPage: '*',\r\n}\r\n\r\nexport default routers;","import { Navbar, Nav, Container, NavDropdown } from 'react-bootstrap'\r\nimport { NavLink } from 'react-router-dom'\r\nimport useAuth from '../auth/useAuth';\r\nimport routers from '../helpers/routers'\r\n\r\nexport default function Navigation() {\r\n    const tools: any = useAuth();\r\n\r\n    return (\r\n        <Navbar bg=\"dark\" expand=\"lg\" variant=\"dark\">\r\n            <Container fluid>\r\n                <Navbar.Brand as={NavLink} to={routers.indexPage}>OverX</Navbar.Brand>\r\n                <Navbar.Toggle aria-controls='responsive-navbar-nav' />\r\n                <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n                    <Nav style={{ marginRight: \"auto\" }}>\r\n                        <Nav.Link as={NavLink} to={routers.aboutPage}>About</Nav.Link>\r\n                        {tools.logged ? <NavDropdown title=\"admin\" id=\"collasible-nav-dropdown\">\r\n                            <NavDropdown.Item as={NavLink} to={routers.userPage}>users</NavDropdown.Item>\r\n                            <NavDropdown.Item as={NavLink} to={routers.uploadPage}>uploads</NavDropdown.Item>\r\n                        </NavDropdown> : ''}\r\n                    </Nav>\r\n                    <Nav>\r\n                        {tools.logged ? <>\r\n                            <Nav.Link as={NavLink} to={routers.accountPage}>account</Nav.Link>\r\n                            <Nav.Link className=\"text-danger\" onClick={() => tools.logout()}>Log out</Nav.Link>\r\n                        </> \r\n                            :\r\n                        <>\r\n                            <Nav.Link as={NavLink} to={routers.singInPage}>SingIn</Nav.Link>\r\n                            <Nav.Link as={NavLink} to={routers.singUpPage}>SingUp</Nav.Link>\r\n                        </>}\r\n                    </Nav>\r\n                </Navbar.Collapse>\r\n            </Container>\r\n        </Navbar>\r\n    )\r\n}\r\n","import Navigation from \"../Navigation\";\r\n\r\nexport default function Layout(props: any) {\r\n    return (\r\n        <>\r\n            <Navigation/>\r\n            {props.children}\r\n        </>\r\n    )\r\n}\r\n","export default function AboutPage() {\r\n    return (\r\n        <div>\r\n            <h1>About page</h1>\r\n        </div>\r\n    )\r\n}\r\n","export default function AccountPage() {\r\n    return (\r\n        <div>\r\n            <h1>Account Page</h1>\r\n        </div>\r\n    )\r\n}\r\n","export default function UploadsPage() {\r\n    return (\r\n        <div>\r\n            <h1>UploadsPage</h1>\r\n        </div>\r\n    )\r\n}\r\n","export default function UsersPage() {\r\n    return (\r\n        <div>\r\n            <h1>UsersPage</h1>\r\n        </div>\r\n    )\r\n}\r\n","export default function IndexPage() {\r\n    return (\r\n        <div>\r\n            <h1>IndexPage</h1>\r\n        </div>\r\n    )\r\n}\r\n","export default function NotFoundPage() {\r\n    return (\r\n        <div>\r\n            <h1>Not found page</h1>\r\n        </div>\r\n    )\r\n}\r\n","import { Button, Container } from \"react-bootstrap\";\r\nimport useAuth from \"../../auth/useAuth\";\r\n\r\nexport default function SingInPage() {\r\n    const tools:any = useAuth();\r\n    \r\n    return (\r\n        <Container>\r\n            <Button variant=\"primary\" onClick={() => tools.login(1)}>\r\n                login test\r\n            </Button>\r\n        </Container>\r\n    )\r\n}\r\n","export default function SingUpPage() {\r\n    return (\r\n        <div>\r\n            <h1>Sing Up</h1>\r\n        </div>\r\n    )\r\n}\r\n","import {Redirect, Route} from 'react-router-dom'\r\nimport useAuth from '../auth/useAuth'\r\nimport routers from '../helpers/routers';\r\n\r\nexport default function PrivateRoute(props: any) {\r\n    const tools: any = useAuth();\r\n    if (tools.logged) {\r\n        return <Route {...props}/>\r\n    }\r\n    return <Redirect to={routers.singInPage}/>\r\n}\r\n","import {Redirect, Route} from 'react-router-dom'\r\nimport useAuth from '../auth/useAuth'\r\nimport routers from '../helpers/routers';\r\n\r\nexport default function PublicRoute(props: any) {\r\n    const tools: any = useAuth();\r\n    if (!tools.logged) {\r\n        return <Route {...props}/>\r\n    }\r\n    return <Redirect to={routers.indexPage}/>\r\n}\r\n","import { Route, Switch } from \"react-router-dom\";\r\nimport routers from \"../helpers/routers\";\r\nimport AboutPage from \"../pages/AboutPage\";\r\nimport AccountPage from \"../pages/AccountPage\";\r\nimport UploadsPage from \"../pages/admin/UploadsPage\";\r\nimport UsersPage from \"../pages/admin/UsersPage\";\r\nimport IndexPage from \"../pages/IndexPage\";\r\nimport NotFoundPage from \"../pages/NotFoundPage\";\r\nimport SingInPage from \"../pages/SingInPage\";\r\nimport SingUpPage from \"../pages/SingUpPage\";\r\nimport PrivateRoute from \"./PrivateRoute\";\r\nimport PublicRoute from \"./PublicRoute\";\r\n\r\nexport default function AppRouter() {\r\n    return (\r\n        <Switch>\r\n            <PrivateRoute exact path={routers.indexPage} component={IndexPage}/>\r\n            <Route exact path={routers.aboutPage} component={AboutPage}/>\r\n            \r\n            <PrivateRoute exact path={routers.accountPage} component={AccountPage}/>\r\n            <PublicRoute exact path={routers.singInPage} component={SingInPage}/>\r\n            <PublicRoute exact path={routers.singUpPage} component={SingUpPage}/>\r\n            \r\n            <PrivateRoute exact path={routers.userPage} component={UsersPage}/>\r\n            <PrivateRoute exact path={routers.uploadPage} component={UploadsPage}/>\r\n\r\n            <Route path={routers.notFoundPage} component={NotFoundPage}/>\r\n        </Switch>\r\n    )\r\n}\r\n","import React from 'react';\nimport { BrowserRouter as Router } from 'react-router-dom'\nimport AuthProvider from './auth/AuthProvider';\nimport Layout from './components/layouts/Layout';\nimport AppRouter from './routers/AppRouter';\n\nfunction App() {\n  return (\n    <AuthProvider>\n      <Router>\n        <Layout>\n          <AppRouter />\n        </Layout>\n      </Router>\n    </AuthProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}