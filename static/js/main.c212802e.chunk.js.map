{"version":3,"sources":["auth/AuthProvider.tsx","auth/useAuth.tsx","helpers/routers.ts","components/Navigation.tsx","components/layouts/Layout.tsx","pages/AboutPage/AboutPage.tsx","pages/AccountPage/AccountPage.tsx","pages/admin/UploadsPage/UploadsPage.tsx","pages/admin/UsersPage/UsersPage.tsx","pages/IndexPage/IndexPage.tsx","pages/NotFoundPage/NotFoundPage.tsx","pages/SingInPage/SingInPage.tsx","pages/SingUpPage/SingUpPage.tsx","routers/PrivateRoute.tsx","routers/PublicRoute.tsx","routers/AppRouter.tsx","App.tsx","index.tsx"],"names":["AuthContext","createContext","AuthProvider","props","useState","JSON","parse","localStorage","user","setUser","contextValue","login","credentials","logged","logout","setItem","stringify","Provider","value","children","useAuth","useContext","routers","indexPage","aboutPage","accountPage","singInPage","singUpPage","userPage","uploadPage","notFoundPage","Navigation","tools","console","log","Navbar","bg","expand","variant","Container","fluid","Brand","as","NavLink","to","Toggle","Collapse","id","Nav","style","marginRight","Link","role","NavDropdown","title","Item","className","onClick","Layout","AboutPage","Card","Body","AccountPage","res","getItem","newPost","setNewPost","handlerChange","e","target","name","Row","Col","xs","src","alt","borderRadius","height","width","userName","email","userDescription","Form","encType","FormControl","onChange","placeholder","type","backgroundColor","borderColor","Button","Table","striped","bordered","hover","ButtonGroup","UploadsPage","UsersPage","IndexPage","dimenstions","setDimensions","useEffect","window","innerWidth","Img","InputGroup","autoFocus","NotFoundPage","SingInPage","userCredentials","setUserCredential","handlerSetCredential","maxWidth","margin","FormGroup","htmlFor","SingUpPage","PrivateRoute","PublicRoute","AppRouter","exact","path","component","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c212802e.chunk.js","sourcesContent":["import { createContext, useState } from 'react'\r\n\r\n// interface contextValue\r\ninterface ContextValueI {\r\n    login: any;\r\n    logged: any;\r\n    logout: any;\r\n    user: any\r\n}\r\n\r\ninterface UserI {\r\n    userName: string;\r\n    email: string;\r\n    password: string;\r\n    rePassword: string;\r\n}\r\n\r\nexport const AuthContext = createContext<ContextValueI | null>(null);\r\n\r\nexport default function AuthProvider(props: any) {\r\n\r\n\r\n    const [user, setUser] = useState<UserI | null>(JSON.parse(localStorage.user));\r\n\r\n    // login function\r\n    const login = (credentials: UserI): void => {\r\n        setUser(credentials);\r\n    }\r\n\r\n    // the user is logged\r\n    let logged: boolean = !!user\r\n\r\n    const logout = (): void => {\r\n        setUser(null);\r\n        localStorage.setItem('user', JSON.stringify( null ));\r\n    };\r\n    \r\n    const contextValue: ContextValueI = {\r\n        login,\r\n        logged,\r\n        logout,\r\n        user\r\n    };\r\n\r\n    return (\r\n        <AuthContext.Provider value={contextValue}>\r\n            {props.children}\r\n        </AuthContext.Provider>\r\n    )\r\n}\r\n","import { useContext } from 'react';\r\nimport {AuthContext} from './AuthProvider';\r\n\r\nexport default function useAuth() {\r\n    return useContext(AuthContext);\r\n}\r\n","const routers = {\r\n    indexPage: '/overx/',\r\n    aboutPage: '/overx/about',\r\n    accountPage: '/overx/account',\r\n    singInPage: '/overx/singin',\r\n    singUpPage: '/overx/singup',\r\n    userPage: '/overx/admin/user',\r\n    uploadPage: '/overx/admin/upload',\r\n    notFoundPage: '*',\r\n}\r\n\r\nexport default routers;","import { Navbar, Nav, Container, NavDropdown } from 'react-bootstrap'\r\nimport { NavLink } from 'react-router-dom'\r\nimport useAuth from '../auth/useAuth';\r\nimport routers from '../helpers/routers'\r\n\r\nexport default function Navigation() {\r\n    const tools: any = useAuth();\r\n\r\n    console.log(tools?.logged);\r\n    \r\n\r\n    return (\r\n        <Navbar bg=\"dark\" expand=\"lg\" variant=\"dark\">\r\n            <Container fluid>\r\n                <Navbar.Brand as={NavLink} to={routers.indexPage}>OverX</Navbar.Brand>\r\n                <Navbar.Toggle aria-controls='responsive-navbar-nav' />\r\n                <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n                    <Nav style={{ marginRight: \"auto\" }}>\r\n                        <Nav.Link as={NavLink} to={routers.aboutPage}>About</Nav.Link>\r\n                        {tools.logged && tools?.user?.role === \"admin\" ? <NavDropdown title=\"admin\" id=\"collasible-nav-dropdown\">\r\n                            <NavDropdown.Item as={NavLink} to={routers.userPage}>users</NavDropdown.Item>\r\n                            <NavDropdown.Item as={NavLink} to={routers.uploadPage}>uploads</NavDropdown.Item>\r\n                        </NavDropdown> : ''}\r\n                    </Nav>\r\n                    <Nav>\r\n                        {tools.logged ? <>\r\n                            <Nav.Link as={NavLink} to={routers.accountPage}>account</Nav.Link>\r\n                            <Nav.Link className=\"text-danger\" onClick={() => tools.logout()}>Log out</Nav.Link>\r\n                        </> \r\n                            :\r\n                        <>\r\n                            <Nav.Link as={NavLink} to={routers.singInPage}>SingIn</Nav.Link>\r\n                            <Nav.Link as={NavLink} to={routers.singUpPage}>SingUp</Nav.Link>\r\n                        </>}\r\n                    </Nav>\r\n                </Navbar.Collapse>\r\n            </Container>\r\n        </Navbar>\r\n    )\r\n}\r\n","import Navigation from \"../Navigation\";\r\n\r\nexport default function Layout(props: any) {\r\n    return (\r\n        <>\r\n            <Navigation/>\r\n            {props.children}\r\n        </>\r\n    )\r\n}\r\n","import { Container, Card } from \"react-bootstrap\";\r\n\r\nexport default function AboutPage() {\r\n    return (\r\n        <Container>\r\n            <Card bg=\"dark\" className=\"mt-4\">\r\n                <Card.Body>\r\n                    <h2 className=\"text-center\">About OverX</h2>\r\n                    <hr />\r\n                    <ul>\r\n                        <li>\r\n                            <b>What is?</b>\r\n                            <p>OverX is an application designed to share image posts among other formats which can contain the content they want.</p>\r\n                        </li>\r\n                        <li>\r\n                            <b>Legal note</b>\r\n                            <p>The company is not responsible for the content of these posts, which can be reported if their content is out of the law. The company is the one who puts the database servers and profits from the advertisements that are present on the platform</p>\r\n                        </li>\r\n                    </ul>\r\n                </Card.Body>\r\n            </Card>\r\n        </Container>\r\n    )\r\n}\r\n","import {  useState } from \"react\";\r\nimport { ButtonGroup, Form, Table } from \"react-bootstrap\";\r\nimport { FormControl } from \"react-bootstrap\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport { Card, Col, Container, Row } from \"react-bootstrap\";\r\n\r\nexport default function AccountPage() {\r\n    \r\n    //user\r\n    const res: any = localStorage.getItem('user');\r\n    const user: any = JSON.parse(res);\r\n\r\n    // create a new post state\r\n    const [newPost, setNewPost] = useState<object | null>(null);\r\n\r\n    // input change get value\r\n    function handlerChange(e: any): void {\r\n        setNewPost({ ...newPost, [e.target.name]: e.target.value });\r\n    }\r\n\r\n    // create new post function\r\n    function createNewPost(): void {\r\n        // test\r\n        console.log(newPost);\r\n    }\r\n\r\n    return (\r\n        <Container className=\"mt-4\">\r\n            <Row>\r\n                <Col xs={12}>\r\n                    <Card bg=\"dark\">\r\n                        <Card.Body className=\"text-center\">\r\n                            <img\r\n                                src=\"/overx/profile-img.png\"\r\n                                alt=\"profile-img\"\r\n                                style={{\r\n                                    borderRadius: 200,\r\n                                    height: 200,\r\n                                    width: 200\r\n                                }}\r\n                            />\r\n                            <hr />\r\n                            <h3 className=\"text-primary\">{user.userName}</h3>\r\n                            <hr />\r\n                        </Card.Body>\r\n                    </Card>\r\n                    <Card bg=\"dark\" className=\"mt-4\">\r\n                        <Card.Body>\r\n                            <Card.Body>\r\n                                <h2 className=\"text-center\">Information</h2>\r\n                                <hr />\r\n                                <b>Email: </b><span>{user?.email}</span><br /><br />\r\n                                <b>Description: </b><span>{user?.userDescription ? \"description\" : <span>you haven't description, do you wont create your description? <span className=\"text-primary\">press me</span></span>}</span><br /><br />\r\n                                <b>Total number of Views: </b><span>6</span><br /><br />\r\n                                <b>Total number of Viewers: </b><span>34</span>\r\n                            </Card.Body>\r\n                        </Card.Body>\r\n                    </Card>\r\n                    <Card bg=\"dark\" className=\"mt-4\">\r\n                        <Card.Body>\r\n                            <Form encType=\"multipart/form-data\">\r\n                                <h4 className=\"text-center\">Create Post</h4>\r\n                                <hr />\r\n                                <FormControl\r\n                                    name=\"postName\"\r\n                                    onChange={handlerChange}\r\n                                    placeholder=\"postName\"\r\n                                    type=\"text\"\r\n                                    className=\"text-white\"\r\n                                    style={{ backgroundColor: \"rgba(0,0,0,0.3)\", borderRadius: 50, borderColor: \"transparent\" }}\r\n                                />\r\n                                <FormControl\r\n                                    name=\"postDescription\"\r\n                                    onChange={handlerChange}\r\n                                    type=\"text\"\r\n                                    placeholder=\"postDescription\"\r\n                                    style={{ backgroundColor: \"rgba(0,0,0,0.3)\", borderRadius: 50, borderColor: \"transparent\" }}\r\n                                    className=\"mt-1 text-white\"\r\n                                />\r\n                                <FormControl\r\n                                    name=\"postFile\"\r\n                                    onChange={handlerChange}\r\n                                    placeholder=\"postFile\"\r\n                                    type=\"file\"\r\n                                    style={{ backgroundColor: \"rgba(0,0,0,0.3)\", borderRadius: 50, borderColor: \"transparent\" }}\r\n                                    className=\"mt-1 text-white\"\r\n\r\n                                />\r\n                                <Button variant=\"primary\" onClick={() => createNewPost()} className=\"form-control mt-2\" style={{ borderRadius: 50 }}>create new Post</Button>\r\n                            </Form>\r\n\r\n                            <hr />\r\n                            <Table striped bordered hover variant=\"dark\">\r\n                                {/* test */}\r\n                                <thead>\r\n                                    <th>Name</th>\r\n                                    <th>Type</th>\r\n                                    <th>description</th>\r\n                                    <th>NºLikes</th>\r\n                                    <th>Options</th>\r\n                                </thead>\r\n                                <tbody>\r\n                                    <tr>\r\n                                        <td>Frist upload</td>\r\n                                        <td>Frist upload</td>\r\n                                        <td>asome description</td>\r\n                                        <td>5</td>\r\n                                        <td>\r\n                                            <ButtonGroup>\r\n                                                <Button variant=\"warning\">Edit</Button>\r\n                                                <Button variant=\"danger\">delete</Button>\r\n                                            </ButtonGroup>\r\n                                        </td>\r\n                                    </tr>\r\n                                </tbody>\r\n                            </Table>\r\n                        </Card.Body>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    )\r\n}\r\n","export default function UploadsPage() {\r\n    return (\r\n        <div>\r\n            <h1>UploadsPage</h1>\r\n        </div>\r\n    )\r\n}\r\n","export default function UsersPage() {\r\n    return (\r\n        <div>\r\n            <h1>UsersPage</h1>\r\n        </div>\r\n    )\r\n}\r\n","import { useEffect, useState } from \"react\";\r\nimport { InputGroup } from \"react-bootstrap\";\r\nimport { Button, FormControl } from \"react-bootstrap\";\r\nimport { Card, Container, Form } from \"react-bootstrap\";\r\n\r\nexport default function IndexPage() {\r\n    // dimensions of windows\r\n    const [dimenstions, setDimensions] = useState<number>(0);\r\n\r\n    // set dimensions of the windows\r\n    useEffect(() => {\r\n        setDimensions(window.innerWidth);\r\n        console.log(dimenstions);\r\n    }, [dimenstions]);\r\n\r\n    return (\r\n        <Container className=\"mt-4\">\r\n            <Card style={{backgroundColor:'rgba(0,0,0,0.2)', borderColor: 'transparent'}} className=\"p-4\">\r\n                {dimenstions > 376 ? <Card.Img\r\n                    src=\"/overx/banner.gif\"\r\n                    alt=\"banner\"\r\n                /> :\r\n                    <h2 className=\"text-center\">OverX</h2>}\r\n                <Form>\r\n                    <InputGroup style={{backgroundColor: \"rgba(0,0,0,0.3\", borderRadius: 50}} className=\"p-1 mt-2\">\r\n                        <FormControl\r\n                            name=\"search\"\r\n                            type=\"text\"\r\n                            className=\"text-white\"\r\n                            autoFocus\r\n                            placeholder=\"Search\"\r\n                            style={{ backgroundColor: \"rgba(0,0,0,0)\", borderRadius: 50, borderColor: \"transparent\" }}\r\n                            aria-label=\"Recipient's username\"\r\n                            aria-describedby=\"basic-addon2\"\r\n                        />\r\n                        <Button variant=\"success\" id=\"button-addon2\" style={{ borderRadius: 50 }}>\r\n                            search\r\n                        </Button>\r\n                    </InputGroup>\r\n                </Form>\r\n            </Card>\r\n        </Container>\r\n    )\r\n}\r\n","export default function NotFoundPage() {\r\n    return (\r\n        <div>\r\n            <h1>Not found page</h1>\r\n        </div>\r\n    )\r\n}\r\n","import { useState } from \"react\";\r\nimport { Button, Card, Col, Container, Form, FormControl, FormGroup, Row } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport useAuth from \"../../auth/useAuth\";\r\nimport routers from \"../../helpers/routers\";\r\n\r\nexport default function SingInPage() {\r\n    const tools: any = useAuth();\r\n\r\n    // state of the user credentials\r\n    const [userCredentials, setUserCredential] = useState<object|null>(null);\r\n\r\n    // set user credential with the data of the form function\r\n    function handlerSetCredential(e: any): void {\r\n        setUserCredential({...userCredentials, [e.target.name]: e.target.value})\r\n    }\r\n\r\n    // login user on the system\r\n    function handlerLogin(): void {\r\n        localStorage.setItem('user', JSON.stringify(userCredentials));\r\n        tools.login(userCredentials);\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n            <Row >\r\n                <Col xs={12} className=\"text-center\">\r\n                    <Form className=\"mt-4\">\r\n                        <Card style={{ maxWidth: \"360px\", margin: \"auto\", backgroundColor: \"rgba(0,0,0,0.5)\" }}>\r\n                            <Card.Body>\r\n                                <h3 className=\"text-primary text-center\">Sing In</h3>\r\n                                <hr />\r\n                                <FormGroup className=\"mt-4\">\r\n                                    <label htmlFor=\"email\">Email</label>\r\n                                    <FormControl\r\n                                        id=\"email\"\r\n                                        name=\"email\"\r\n                                        type=\"email\"\r\n                                        autoFocus\r\n                                        placeholder=\"email@example.com\"\r\n                                        style={{ backgroundColor: \"rgba(0,0,0,0.3)\", borderRadius: 50, borderColor: \"transparent\" }}\r\n                                        className=\"mt-1 text-center text-white\"\r\n                                        onChange={handlerSetCredential}\r\n                                    />\r\n                                </FormGroup>\r\n                                <FormGroup className=\"mt-4\">\r\n                                    <label htmlFor=\"password\">Password</label>\r\n                                    <FormControl\r\n                                        name=\"password\"\r\n                                        type=\"password\"\r\n                                        placeholder=\"your password\"\r\n                                        style={{ backgroundColor: \"rgba(0,0,0,0.3)\", borderRadius: 50, borderColor: \"transparent\" }}\r\n                                        className=\"mt-1 text-center text-white\"\r\n                                        onChange={handlerSetCredential}\r\n                                    />\r\n                                </FormGroup>\r\n                            </Card.Body>\r\n                            <Button variant=\"primary\" onClick={() => handlerLogin()}>\r\n                                login \r\n                            </Button>\r\n                        </Card>\r\n                        <p className=\"mt-4\">if you haven't account: <Link to={routers.singUpPage}>Sing Up</Link></p>\r\n                    </Form>\r\n                </Col>\r\n            </Row>\r\n        </Container >\r\n    )\r\n}\r\n","import { useState } from \"react\";\r\nimport { Button, FormControl } from \"react-bootstrap\";\r\nimport { Container, Card, Col, Row, Form, FormGroup } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport useAuth from \"../../auth/useAuth\";\r\nimport routers from \"../../helpers/routers\";\r\n\r\nexport default function SingUpPage() {\r\n\r\n    // credentials for register a new user\r\n    const [userCredentials, setUserCredential] = useState<object | null>(null);\r\n\r\n    // useAuth\r\n    const tools: any = useAuth();\r\n\r\n    // register a new user\r\n    function createUser(): void {\r\n        localStorage.setItem('user', JSON.stringify(userCredentials));\r\n        tools.login(userCredentials);\r\n    }\r\n\r\n    // value of the inputs when change\r\n    function handlerChange(e:any): void {\r\n        setUserCredential({...userCredentials, [e.target.name]: e.target.value});\r\n    }\r\n\r\n    return (\r\n        <Container className=\"mt-4\">\r\n            <Row>\r\n                <Col xs={12}>\r\n                    <Card style={{ maxWidth: \"360px\", margin: \"auto\", backgroundColor: \"rgba(0,0,0,0.5)\" }}>\r\n                        <Card.Body>\r\n                            <h3 className=\"text-center text-primary\">Sing Up</h3>\r\n                            <hr />\r\n                            <Form>\r\n                                <FormGroup className=\"text-center\">\r\n                                    <label htmlFor=\"userName\">Name</label>\r\n                                    <FormControl\r\n                                        id=\"userName\"\r\n                                        name=\"userName\"\r\n                                        type=\"text\"\r\n                                        autoFocus\r\n                                        placeholder=\"pepito07\"\r\n                                        style={{ backgroundColor: \"rgba(0,0,0,0.3)\", borderRadius: 50, borderColor: \"transparent\" }}\r\n                                        className=\"mt-1 text-center text-white\"\r\n                                        onChange={(e) => handlerChange(e)}\r\n                                    />\r\n                                </FormGroup>\r\n                                <FormGroup className=\"text-center\">\r\n                                    <label htmlFor=\"email\">Email</label>\r\n                                    <FormControl\r\n                                        id=\"email\"\r\n                                        name=\"email\"\r\n                                        type=\"email\"\r\n                                        placeholder=\"pepito07@gmail.com\"\r\n                                        style={{ backgroundColor: \"rgba(0,0,0,0.3)\", borderRadius: 50, borderColor: \"transparent\" }}\r\n                                        className=\"mt-1 text-center text-white\"\r\n                                        onChange={(e) => handlerChange(e)}\r\n                                    />\r\n                                </FormGroup>\r\n                                <FormGroup className=\"text-center\">\r\n                                    <label htmlFor=\"password\">Password</label>\r\n                                    <FormControl\r\n                                        id=\"password\"\r\n                                        name=\"password\"\r\n                                        type=\"password\"\r\n                                        placeholder=\"password hyper secure\"\r\n                                        style={{ backgroundColor: \"rgba(0,0,0,0.3)\", borderRadius: 50, borderColor: \"transparent\" }}\r\n                                        className=\"mt-1 text-center text-white\"\r\n                                        onChange={(e) => handlerChange(e)}\r\n                                    />\r\n                                </FormGroup>\r\n                                <FormGroup className=\"text-center\">\r\n                                    <label htmlFor=\"rePassword\">Repete Password</label>\r\n                                    <FormControl\r\n                                        id=\"rePassword\"\r\n                                        name=\"rePassword\"\r\n                                        type=\"password\"\r\n                                        placeholder=\"password hype secure\"\r\n                                        style={{ backgroundColor: \"rgba(0,0,0,0.3)\", borderRadius: 50, borderColor: \"transparent\" }}\r\n                                        className=\"mt-1 text-center text-white\"\r\n                                        onChange={(e) => handlerChange(e)}\r\n                                    />\r\n                                </FormGroup>\r\n                            </Form>\r\n                        </Card.Body>\r\n                        <Button variant=\"success\" onClick={() => createUser()}>create account</Button>\r\n                    </Card>\r\n                    <p className=\"mt-4 text-center\">if you haven account: <Link to={routers.singInPage}>Sing In</Link></p>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    )\r\n}\r\n","import {Redirect, Route} from 'react-router-dom'\r\nimport useAuth from '../auth/useAuth'\r\nimport routers from '../helpers/routers';\r\n\r\nexport default function PrivateRoute(props: any) {\r\n    const tools: any = useAuth();\r\n\r\n    console.log('isLogged: ',tools.logged);\r\n    \r\n    if (tools?.logged) {\r\n        return <Route {...props}/>\r\n    }\r\n    return <Redirect to={routers.singInPage}/>\r\n}\r\n","import {Redirect, Route} from 'react-router-dom'\r\nimport useAuth from '../auth/useAuth'\r\nimport routers from '../helpers/routers';\r\n\r\nexport default function PublicRoute(props: any) {\r\n    const tools: any = useAuth();\r\n    if (!tools.logged) {\r\n        return <Route {...props}/>\r\n    }\r\n    return <Redirect to={routers.indexPage}/>\r\n}\r\n","import { Route, Switch } from \"react-router-dom\";\r\nimport routers from \"../helpers/routers\";\r\nimport AboutPage from \"../pages/AboutPage\";\r\nimport AccountPage from \"../pages/AccountPage\";\r\nimport UploadsPage from \"../pages/admin/UploadsPage\";\r\nimport UsersPage from \"../pages/admin/UsersPage\";\r\nimport IndexPage from \"../pages/IndexPage\";\r\nimport NotFoundPage from \"../pages/NotFoundPage\";\r\nimport SingInPage from \"../pages/SingInPage\";\r\nimport SingUpPage from \"../pages/SingUpPage\";\r\nimport PrivateRoute from \"./PrivateRoute\";\r\nimport PublicRoute from \"./PublicRoute\";\r\n\r\nexport default function AppRouter() {\r\n    return (\r\n        <Switch>\r\n            <PrivateRoute exact path={routers.indexPage} component={IndexPage}/>\r\n            <Route exact path={routers.aboutPage} component={AboutPage}/>\r\n            \r\n            <PrivateRoute exact path={routers.accountPage} component={AccountPage}/>\r\n            <PublicRoute exact path={routers.singInPage} component={SingInPage}/>\r\n            <PublicRoute exact path={routers.singUpPage} component={SingUpPage}/>\r\n            \r\n            <PrivateRoute exact path={routers.userPage} component={UsersPage}/>\r\n            <PrivateRoute exact path={routers.uploadPage} component={UploadsPage}/>\r\n\r\n            <Route path={routers.notFoundPage} component={NotFoundPage}/>\r\n        </Switch>\r\n    )\r\n}\r\n","import React from 'react';\nimport { BrowserRouter as Router } from 'react-router-dom'\nimport AuthProvider from './auth/AuthProvider';\nimport Layout from './components/layouts/Layout';\nimport AppRouter from './routers/AppRouter';\n\nfunction App() {\n  return (\n    <AuthProvider>\n      <Router>\n        <Layout>\n          <AppRouter />\n        </Layout>\n      </Router>\n    </AuthProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}